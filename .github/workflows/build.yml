name: Build

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Git Fetch Tags"
        run: git fetch --tags
      - name: "Install .NET"
        uses: actions/setup-dotnet@v4
      - name: Dotnet Restore
        run: dotnet restore
      - name: Dotnet Format
        run: dotnet format --verify-no-changes -v diagnostic
      - name: Dotnet Build
        run: dotnet build -c Release --no-restore
      # - name: Test
      #   run: dotnet test -c Release --no-build /p:CollectCoverage=true /p:Threshold=75 /p:CoverletOutput="../../artifacts/"
      - name: Dotnet Pack
        if: github.event_name == 'release'
        run: dotnet pack -c Release --no-build --include-symbols --include-source -p:SymbolPackageFormat=snupkg -o ./artifacts
      - name: Dotnet Publish
        if: github.event_name == 'release'
        run: dotnet publish -c Release
      - name: "Upload Artifacts"
        if: github.event_name == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: "./artifacts"

  publish-packages:
    name: "Publish Packages"
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Download Artifacts"
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: "./artifacts"
      - name: "Install .NET"
        uses: actions/setup-dotnet@v4
      - name: "Publish NuGet Packages"
        run: dotnet nuget push './artifacts/*.nupkg' -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            goyalvaibhav/cosmosreplication
            ghcr.io/cosmosreplication/cosmosreplication
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platform: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}